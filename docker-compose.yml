version: '3.8'

services:
  broker:
    image: apache/kafka:latest
    hostname: broker
    container_name: broker
    ports:
      - 9092:9092
    # volumes:
      # - kafka-data:/tmp/kraft-combined-logs
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:29093
      KAFKA_LISTENERS: PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
      CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk
    networks:
      - unilogs-network

  vector-consumer:
    image: timberio/vector:0.45.0-debian
    container_name: vector-consumer
    depends_on:
      - broker
      - loki
    volumes:
      - ./vector/vector-consumer.yaml:/etc/vector/vector.yaml:ro
    command: ["-c", "/etc/vector/vector.yaml"]
    networks:
      - unilogs-network

  loki:
    image: grafana/loki:latest
    container_name: loki
    environment:
    ports:
      - "3100:3100"
    volumes:
      - loki-data:/loki
      - ./loki-config.yaml:/etc/loki/config.yaml
    command: -config.file=/etc/loki/local-config.yaml -config.expand-env=true 
    networks:
      - unilogs-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    depends_on:
      - loki
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    volumes:
      - grafana-data:/var/lib/grafana
      - ./provision/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - ./provision/dashboards:/var/lib/grafana/provisioning/dashboards
      - ./provision/grafana.ini:/etc/grafana/grafana.ini
    networks:
      - unilogs-network
    
volumes:
  grafana-data:
  # kafka-data:
  loki-data:

networks:
  unilogs-network:
    name: unilogs-network
    driver: bridge
